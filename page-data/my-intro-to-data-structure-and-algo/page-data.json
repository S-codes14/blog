{"componentChunkName":"component---src-templates-blog-post-js","path":"/my-intro-to-data-structure-and-algo/","result":{"data":{"site":{"siteMetadata":{"title":"S-codes Talkin","author":"Sibongumusa Lungelo - s-codes14"}},"markdownRemark":{"id":"c62387e1-8b23-5833-af7b-42b37a4e49ca","html":"<p>Data structures and algorithms are terms that Iâ€™ve seen always pop up when Iâ€™m reading blogs or watching youtube videos and for a long time Iâ€™ve always wanted to learn them but was never motivated to</p>\n<p>I would often start then give up as quickly as possible.</p>\n<p>This time is different, I am literally forcing myself to learn them and in this blog post Iâ€™m going to give a quick introduction by explaining data structures and algorithms in the simplest way possible.</p>\n<hr>\n<ul>\n<li><strong>Algorithms.</strong></li>\n</ul>\n<p>While the word might seem prestigious, it is nothing but a list of instructions for performing a specific task. If you have been coding then you have been writing algorithms all along, it is a procedure of having well defined steps for solving a particular problem or producing a particular result.</p>\n<p>I like to think of an algorithm as a recipe(the one used for cooking) because it tells you a list of steps and actions that you must take in order to make food</p>\n<p>There are different types of algorithms that perform different tasks such as: </p>\n<ul>\n<li>sorting</li>\n<li>searching</li>\n<li>deleting </li>\n<li>inserting</li>\n<li>updating</li>\n</ul>\n<p>There are different ways of writing an algorithm that does the same thing but they are distinguished by performance and perfomance for algorithms is measured by:</p>\n<ul>\n<li>time (amount of time for an algorithm to execute)</li>\n<li>space (the amount of memory required by the algorithm)</li>\n<li><strong>Data Structures.</strong></li>\n</ul>\n<p>As the name implies, they are structures that store and organize data. </p>\n<p>Data structures are built in a way that data values have relationships amongst them and that there are functions and operations built-in to manipulate the data. </p>\n<p>An example would be an array/list, a data structure that you have probably used in your coding career. There is a relationship between index of an array and size of an array (The array is indexed from 0 to size-1.). There are operations/functions such as sorting, deleting,inserting etc. all built-in into the array data structure. </p>\n<p>types of data structures include:</p>\n<ul>\n<li>linear data structures (they are arranged in a linear order meaning that they are non-trees and non-graph, examples would be: arrays; linked lists; stacks; and queue.)</li>\n<li>non-linear data structures (they do not form a sequence and each element or item is connected with two or more other items, examples would be trees and graphs)</li>\n</ul>\n<p>You are probably asking yourself why do we have so many data structures, the reasons are:</p>\n<ul>\n<li>processor speed (cpu processes some data structures faster than others)</li>\n<li>data search (efficent retrival of specific data differs amongst diiferent data structures)</li>\n<li>multiple request (some data structures take longer to make multiple requests)</li>\n</ul>\n<p>Besides the number of data structures, just having one is advantage because:</p>\n<ul>\n<li>They are efficient (fast)</li>\n<li>They are reusable (build once use anywhere)</li>\n<li>They are abstractable (process of filtering out)</li>\n</ul>\n<p>And I mentioned earlier that there are functions built into data stuctures, the common ones are: </p>\n<ul>\n<li>Traversing (iterating over the data)</li>\n<li>Insertion (adding a new item in any place in the data structure)</li>\n<li>deletion (removing an item form anywhere in the data structure)</li>\n<li>searching (finding the location of any element within the data structure)</li>\n<li>sorting (arranging data in a specific order)</li>\n<li>merging (adding two or more groups of data to form a single unified set)</li>\n<li>etc.. many more</li>\n<li><strong>Conclusion.</strong>\nThis post was so that I can explain algorithms and data structures, Theres still a vast majority that I still need to cover from Big O notation to creating algorithms and data structure to algorithmic thinking hopefully in future posts, this was just an introduction</li>\n</ul>","timeToRead":3,"frontmatter":{"title":"My intro to data structures and algorithms ðŸ“š","date":"October 04, 2022","spoiler":"Data structures and algorithms is something that I've wanted to learn for a long time (I think I finally understand them let me explain..)","cta":null},"fields":{"slug":"/my-intro-to-data-structure-and-algo/","langKey":"en"}}},"pageContext":{"slug":"/my-intro-to-data-structure-and-algo/","previous":{"fields":{"slug":"/Opensourcing -my-startup/","langKey":"en","directoryName":"Opensourcing -my-startup","maybeAbsoluteLinks":[]},"frontmatter":{"title":"opensource as a last resort"}},"next":{"fields":{"slug":"/how-to-write-algorithms/","langKey":"en","directoryName":"how-to-write-algorithms","maybeAbsoluteLinks":[]},"frontmatter":{"title":"How to write algorithms ðŸ“š"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}